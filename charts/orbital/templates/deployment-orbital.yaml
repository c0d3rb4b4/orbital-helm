---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "orbital.fullname" . }}
  namespace: {{ template "orbital.namespace" . }}
  labels:
{{- include "orbital.metaLabels" . | nindent 4 }}
  {{- if not (empty .Values.orbital.deploymentAnnotations) }}
  annotations:
  {{- range $key, $value := .Values.orbital.deploymentAnnotations }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
spec:
  {{- if not .Values.orbital.autoscaling.enabled }}
  replicas: {{ .Values.orbital.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
{{- include "orbital.selectorLabels" . | nindent 6 }}
  {{- if not (empty .Values.orbital.updateStrategy) }}
  strategy:
{{ toYaml .Values.orbital.updateStrategy | indent 4 }}
  {{- end }}
  {{- if .Values.orbital.deploymentMinReadySeconds }}
  minReadySeconds: { { .Values.orbital.deploymentMinReadySeconds }}
  {{- end }}
  template:
    metadata:
      {{ if not (empty .Values.orbital.podAnnotations) }}
      annotations:
        {{- if .Values.orbital.podAnnotations }}
        {{- range $key, $value := .Values.orbital.podAnnotations }}
        {{ $key }}: { { $value | quote }}
        {{- end }}
        {{- end }}
      {{- end }}
      labels:
{{- include "orbital.metaLabels" . | nindent 8 }}
       {{- if not (empty .Values.orbital.podLabels) }}
{{ toYaml .Values.orbital.podLabels | nindent 8 }}
       {{- end }}
    spec:
      {{- if or .Values.orbital.serviceAccount.create .Values.orbital.serviceAccount.name }}
      serviceAccountName: {{ template "orbital.serviceAccountName" . }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.orbital.serviceAccount.automountServiceAccountToken }}
      {{- if .Values.orbital.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.orbital.image.pullSecrets }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .Values.orbital.hostNetwork }}
      hostNetwork: true
      {{- end }}
      {{- if .Values.orbital.priorityClassName }}
      priorityClassName: "{{ .Values.orbital.priorityClassName }}"
      {{- end }}
      {{- if .Values.orbital.hostAliases }}
      hostAliases:
{{- toYaml .Values.orbital.hostAliases | nindent 6 }}
      {{- end }}
      {{- if .Values.orbital.dnsPolicy }}
      dnsPolicy: {{ .Values.orbital.dnsPolicy | quote }}
      {{- end }}
      {{- if .Values.orbital.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.orbital.dnsConfig | indent 8 }}
      {{- end }}
      containers:
      - name: "orbital"
        image: {{ .Values.orbital.image.repository }}:{{ .Values.orbital.image.tag }}
        imagePullPolicy: {{ .Values.orbital.image.pullPolicy }}
        {{- if not (empty .Values.orbital.containerSecurityContext) }}
        securityContext:
{{ toYaml .Values.orbital.containerSecurityContext | nindent 10 }}
        {{- end }}
        env:
          {{- range .Values.orbital.env }}
        - name: {{ .name }}
          value: {{ .value }}
          {{- end }}
        - name: OPTIONS
          value: >-
            --vyne.analytics.persistRemoteCallResponses={{ .Values.orbital.persistRemoteCallResponses }}
            --vyne.services.config-file=/opt/service/config/services/services.conf
            {{- if .Values.orbital.security.enabled }}
            --vyne.security.openIdp.enabled=true
            --vyne.security.openIdp.jwks-uri={{ .Values.orbital.security.jwksUri }}
            --vyne.security.openIdp.issuerUrl={{ .Values.orbital.security.issuerUrl }}
            --vyne.security.openIdp.clientId={{ .Values.orbital.security.clientId }}
            --vyne.security.openIdp.scope={{ .Values.orbital.security.scope }}
            --vyne.security.openIdp.require-https={{ .Values.orbital.security.requireHttps }}
            {{- end }}
            {{- if .Values.orbital.project.enabled }}
            --vyne.workspace.project-file={{ .Values.orbital.project.path }}
            {{- else }}
            --vyne.workspace.config-file={{ .Values.orbital.workspace.path }}
            {{- end }}
        - name: JAVA_OPTS
          value: >-
            -Xms256m
            -Xmx1024m
        {{- if .Values.orbital.lifecycle }}
        lifecycle:
{{- toYaml .Values.orbital.lifecycle | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: orbital-config
            mountPath: /opt/service/config
          - name: orbital-services-config
            mountPath: /opt/service/config/services
        ports:
        - name: orbital
          containerPort: {{ .Values.orbital.service.containerPort }}
          {{- if .Values.orbital.service.hostPort }}
          hostPort: { { .Values.orbital.service.hostPort }}
          {{- end }}
          protocol: TCP
        readinessProbe:
{{ toYaml .Values.orbital.readinessProbe | indent 10 }}
        livenessProbe:
{{ toYaml .Values.orbital.livenessProbe | indent 10 }}
        {{- if .Values.orbital.resources }}
        resources:
{{ toYaml .Values.orbital.resources | indent 10 }}
        {{- end }}
      {{- if .Values.orbital.affinity }}
      affinity:
{{ toYaml .Values.orbital.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.orbital.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml .Values.orbital.topologySpreadConstraints | indent 8 }}
      {{- end }}
      {{ if not (empty .Values.orbital.securityContext) }}
      securityContext:
{{ toYaml .Values.orbital.securityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.orbital.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.orbital.nodeSelector | indent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.orbital.terminationGracePeriodSeconds }}
      {{- if .Values.orbital.tolerations }}
      tolerations:
{{ toYaml .Values.orbital.tolerations | indent 8 }}
      {{- end }}
      volumes:
        - name: orbital-config
          configMap:
            name: orbital-config
        - name: orbital-services-config
          configMap:
            name: orbital-services-config
