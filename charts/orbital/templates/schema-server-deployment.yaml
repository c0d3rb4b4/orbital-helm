---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-server
  namespace: {{ template "orbital.namespace" . }}
  labels:
    {{- include "schema.metaLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.schema.replicaCount }}
  selector:
    matchLabels:
      {{- include "schema.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "schema.metaLabels" . | nindent 8 }}
        {{- if .Values.schema.podLabels }}
        {{ toYaml .Values.schema.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.schema.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.schema.image.pullSecrets }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
      - name: "schema-server"
        image: {{ .Values.schema.image.repository }}:{{ .Values.schema.image.tag }}
        imagePullPolicy: {{ .Values.schema.image.pullPolicy }}
        volumeMounts:
          - name: data-volume
            mountPath: /var/lib/orbital/schema-server
        ports:
        - name: schema-http
          containerPort: {{ .Values.schema.service.http.containerPort }}
          protocol: TCP
        - name: schema-rsocket
          containerPort: {{ .Values.schema.service.rsocket.containerPort }}
          protocol: TCP
        readinessProbe:
{{ toYaml .Values.schema.readinessProbe | indent 10 }}
        livenessProbe:
{{ toYaml .Values.schema.livenessProbe | indent 10 }}
      volumes:
        - name: data-volume
          emptyDir: { }
